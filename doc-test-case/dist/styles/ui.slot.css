/**
 * The Slot syst√®me (for multi component).
 * @component .slot
 * @example <!-- This is a component because contain `.ui` -->
 * <div class="ui slot">
 *     <!-- content -->
 * </div>
 */
.slot--inner {
  margin-left: auto;
  margin-right: auto;
  padding: 0;
}
@media (min-width: 480px) {
  .slot--inner {
    max-width: 476px;
  }
}
@media (min-width: 768px) {
  .slot--inner {
    max-width: 760px;
  }
}
@media (min-width: 992px) {
  .slot--inner {
    max-width: 980px;
  }
}
@media (min-width: 1200px) {
  .slot--inner {
    max-width: 1180px;
  }
}
.slot--inner::after {
  content: "";
  display: block;
  clear: left;
}
.slot--inner > .slot--before {
  padding: 20px;
}
.slot.as-container .slot--inner {
  background-color: #fff;
}
@media (min-width: 480px) {
  .slot.as-container .slot--inner {
    margin-top: 30px;
    margin-bottom: 30px;
  }
}
.slot.as-toggles > .slot--inner > .slot--items > .slot--item {
  display: none;
/**
                     * Show a part with the variation `.as-toggles` class on `.slot` component.
                     * @type {state}
                     * @name .is-displayed
                     * @memberOf .slot--item
                     * @example <div class="slot--item is-displayed">
                     *     <!-- content -->
                     * </div>
                     */
}
.slot.as-toggles > .slot--inner > .slot--items > .slot--item.is-displayed {
  display: block;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3dlYmFwcC9zcmMvc3R5bGVzL3VpLnNsb3Quc3R5bCIsIi4uL3dlYmFwcC9zcmMvc3R5bGVzL3ZhcmlhYmxlcy5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOzs7Ozs7OztBQVNJO0VDNEJBLGFBQVksS0FBWjtFQUNBLGNBQWEsS0FBYjtFRDFCSSxTQUFRLEVBQVI7O0FDNEJ1QjtBQUFBO0lBQ3ZCLFdBQVUsTUFBVjs7O0FBRXVCO0FBQUE7SUFDdkIsV0FBVSxNQUFWOzs7QUFFdUI7QUFBQTtJQUN2QixXQUFVLE1BQVY7OztBQUV1QjtBQUFBO0lBQ3ZCLFdBQVUsT0FBVjs7O0FBNEJKO0VBQ0ksU0FBUSxHQUFSO0VBQ0EsU0FBUSxNQUFSO0VBQ0EsT0FBTSxLQUFOOztBRG5FQTtFQUNJLFNBQVEsS0FBUjs7QUFZSjtFQUNJLGtCQUFpQixLQUFqQjs7QUFDNEI7QUFBQTtJQUN4QixZQUFXLEtBQVg7SUFDQSxlQUFjLEtBQWQ7OztBQXVCQTtFQUNJLFNBQVEsS0FBUjtBQUVBOzs7Ozs7Ozs7O0FBU0E7RUFDSSxTQUFRLE1BQVIiLCJmaWxlIjoidWkuc2xvdC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwidmFyaWFibGVzXCJcclxuXHJcbi8qKlxyXG4gKiBUaGUgU2xvdCBzeXN0w6htZSAoZm9yIG11bHRpIGNvbXBvbmVudCkuXHJcbiAqIEBjb21wb25lbnQgLnNsb3RcclxuICogQGV4YW1wbGUgPCEtLSBUaGlzIGlzIGEgY29tcG9uZW50IGJlY2F1c2UgY29udGFpbiBgLnVpYCAtLT5cclxuICogPGRpdiBjbGFzcz1cInVpIHNsb3RcIj5cclxuICogICAgIDwhLS0gY29udGVudCAtLT5cclxuICogPC9kaXY+XHJcbiAqL1xyXG4uc2xvdFxyXG4gICAgJi0taW5uZXJcclxuICAgICAgICBjb250YWluZXItbWF4KClcclxuICAgICAgICBjbGVhci1sZWZ0KClcclxuICAgICAgICBwYWRkaW5nIDBcclxuXHJcbiAgICAgICAgJiA+IF5bMF0tLWJlZm9yZVxyXG4gICAgICAgICAgICBwYWRkaW5nIDIwcHhcclxuXHJcbiAgICAvKipcclxuICAgICAqIExpbWl0IHNsb3QgYXMgYSBwYWdlIGNvbnRhaW5lci5cclxuICAgICAqIEB0eXBlIHt2YXJpYXRpb259XHJcbiAgICAgKiBAbmFtZSAuYXMtY29udGFpbmVyXHJcbiAgICAgKiBAbWVtYmVyT2YgLnNsb3RcclxuICAgICAqIEBleGFtcGxlIDxkaXYgY2xhc3M9XCJ1aSBzbG90IGFzLWNvbnRhaW5lclwiPlxyXG4gICAgICogICAgIDwhLS0gY29udGVudCAtLT5cclxuICAgICAqIDwvZGl2PlxyXG4gICAgICovXHJcbiAgICAmLmFzLWNvbnRhaW5lclxyXG4gICAgICAgICYgXlswXS0taW5uZXJcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvciAjRkZGXHJcbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBzY3JlZW4teHMpXHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wIDMwcHhcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b20gMzBweFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVmFyaWF0aW9uIGAuYXMtdG9nZ2xlc2AgdG8gc2hvdyBvbmx5IGNlcnRhaW4gaXRlbXMuXHJcbiAgICAgKiBAdHlwZSB7dmFyaWF0aW9ufVxyXG4gICAgICogQG5hbWUgLmFzLXRvZ2dsZXNcclxuICAgICAqIEBtZW1iZXJPZiAuc2xvdFxyXG4gICAgICogQGV4YW1wbGUgPGRpdiBjbGFzcz1cInNsb3QgYXMtdG9nZ2xlc1wiPlxyXG4gICAgICogICAgIDwhLS0gY29udGVudCAtLT5cclxuICAgICAqIDwvZGl2PlxyXG4gICAgICovXHJcbiAgICAmLmFzLXRvZ2dsZXNcclxuICAgICAgICAmID4gXlswXS0taW5uZXJcclxuICAgICAgICAgICAgJiA+IF5bMF0tLWl0ZW1zXHJcblxyXG4gICAgICAgICAgICAgICAgLyoqXHJcbiAgICAgICAgICAgICAgICAgKiBFYWNoIHNlcGFyYXRlIFNsb3QgSXRlbSBjb250ZW50LlxyXG4gICAgICAgICAgICAgICAgICogQGNvbXBvbmVudCAuc2xvdC0taXRlbVxyXG4gICAgICAgICAgICAgICAgICogQGV4YW1wbGUgPGRpdiBjbGFzcz1cInNsb3QtLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAqICAgICA8IS0tIGNvbnRlbnQgLS0+XHJcbiAgICAgICAgICAgICAgICAgKiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAqIEBwYXJ0b2YgLnNsb3RcclxuICAgICAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICAgICAgJiA+IF5bMF0tLWl0ZW1cclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5IG5vbmVcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLyoqXHJcbiAgICAgICAgICAgICAgICAgICAgICogU2hvdyBhIHBhcnQgd2l0aCB0aGUgdmFyaWF0aW9uIGAuYXMtdG9nZ2xlc2AgY2xhc3Mgb24gYC5zbG90YCBjb21wb25lbnQuXHJcbiAgICAgICAgICAgICAgICAgICAgICogQHR5cGUge3N0YXRlfVxyXG4gICAgICAgICAgICAgICAgICAgICAqIEBuYW1lIC5pcy1kaXNwbGF5ZWRcclxuICAgICAgICAgICAgICAgICAgICAgKiBAbWVtYmVyT2YgLnNsb3QtLWl0ZW1cclxuICAgICAgICAgICAgICAgICAgICAgKiBAZXhhbXBsZSA8ZGl2IGNsYXNzPVwic2xvdC0taXRlbSBpcy1kaXNwbGF5ZWRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgKiAgICAgPCEtLSBjb250ZW50IC0tPlxyXG4gICAgICAgICAgICAgICAgICAgICAqIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICAgICAgICAgICYuaXMtZGlzcGxheWVkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXkgYmxvY2siLCJndXR0ZXIgPSAxNXB4XHJcbnNjcmVlbi14cyA9IDQ4MHB4XHJcbnNjcmVlbi1zbSA9IDc2OHB4XHJcbnNjcmVlbi1tZCA9IDk5MnB4XHJcbnNjcmVlbi1sZyA9IDEyMDBweFxyXG5jb250YWluZXIteHMgPSA0NzZweFxyXG5jb250YWluZXItc20gPSA3NjBweFxyXG5jb250YWluZXItbWQgPSA5ODBweFxyXG5jb250YWluZXItbGcgPSAxMTgwcHhcclxuXHJcbmZvbnQtYXdlc29tZSgpXHJcbiAgICBmb250LWZhbWlseTogJ0ZvbnRBd2Vzb21lJztcclxuXHJcbnRyZWJ1Y2hldCgpXHJcbiAgICBmb250LWZhbWlseTogJ1RyZWJ1Y2hldCBNUycsICdMdWNpZGEgR3JhbmRlJywgJ0x1Y2lkYSBTYW5zIFVuaWNvZGUnLCAnTHVjaWRhIFNhbnMnLCBUYWhvbWEsIHNhbnMtc2VyaWY7XHJcblxyXG5obG10LXJvdW5kZWQoKVxyXG4gICAgZm9udC1mYW1pbHk6ICdobG10LXJvdW5kZWQnLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuXHJcbmNlbnR1cnktZ290aGljKClcclxuICAgIGZvbnQtZmFtaWx5OiAnTXVsaScsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG5cclxuY29udGFpbmVyKClcclxuICAgIG1hcmdpbi1yaWdodCBhdXRvXHJcbiAgICBtYXJnaW4tbGVmdCBhdXRvXHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGggc2NyZWVuLXhzKVxyXG4gICAgICAgIHdpZHRoIGNvbnRhaW5lci14c1xyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoIHNjcmVlbi1zbSlcclxuICAgICAgICB3aWR0aCBjb250YWluZXItc21cclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aCBzY3JlZW4tbWQpXHJcbiAgICAgICAgd2lkdGggY29udGFpbmVyLW1kXHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGggc2NyZWVuLWxnKVxyXG4gICAgICAgIHdpZHRoIGNvbnRhaW5lci1sZ1xyXG5cclxuY29udGFpbmVyLW1heCgpXHJcbiAgICBtYXJnaW4tbGVmdCBhdXRvXHJcbiAgICBtYXJnaW4tcmlnaHQgYXV0b1xyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoIHNjcmVlbi14cylcclxuICAgICAgICBtYXgtd2lkdGggY29udGFpbmVyLXhzXHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGggc2NyZWVuLXNtKVxyXG4gICAgICAgIG1heC13aWR0aCBjb250YWluZXItc21cclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aCBzY3JlZW4tbWQpXHJcbiAgICAgICAgbWF4LXdpZHRoIGNvbnRhaW5lci1tZFxyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoIHNjcmVlbi1sZylcclxuICAgICAgICBtYXgtd2lkdGggY29udGFpbmVyLWxnXHJcblxyXG5jb2x1bW4oY3VycmVudCwgbWF4LCBndXR0ZXIgPSAwKVxyXG4gICAgaWYgZ3V0dGVyICE9IDBcclxuICAgICAgICB3aWR0aCBcImNhbGMoJXMlIC0gJXMpXCIgJSAoKChjdXJyZW50ICogMTAwKSAvIG1heCkgKGd1dHRlciAqIDIpKVxyXG4gICAgZWxzZVxyXG4gICAgICAgIHdpZHRoICgoY3VycmVudCAqIDEwMCkgLyBtYXgpICVcclxuXHJcbnByZXBlbmQoY3VycmVudCwgbWF4LCBndXR0ZXIgPSAwKVxyXG4gICAgaWYgZ3V0dGVyICE9IDBcclxuICAgICAgICBtYXJnaW4tbGVmdCBcImNhbGMoJXMlICsgJXMpXCIgJSAoKChjdXJyZW50ICogMTAwKSAvIG1heCkgZ3V0dGVyKVxyXG4gICAgZWxzZVxyXG4gICAgICAgIG1hcmdpbi1sZWZ0ICgoY3VycmVudCAqIDEwMCkgLyBtYXgpICVcclxuXHJcbmFwcGVuZChjdXJyZW50LCBtYXgpXHJcbiAgICBpZiBndXR0ZXIgIT0gMFxyXG4gICAgICAgIG1hcmdpbi1yaWdodCBcImNhbGMoJXMlICsgJXMpXCIgJSAoKChjdXJyZW50ICogMTAwKSAvIG1heCkgZ3V0dGVyKVxyXG4gICAgZWxzZVxyXG4gICAgICAgIG1hcmdpbi1yaWdodCAoKGN1cnJlbnQgKiAxMDApIC8gbWF4KSAlXHJcblxyXG5wdWxsKGN1cnJlbnQsIG1heClcclxuICAgIHJpZ2h0ICgoY3VycmVudCAqIDEwMCkgLyBtYXgpICVcclxuXHJcbnB1c2goY3VycmVudCwgbWF4KVxyXG4gICAgbGVmdCAoKGN1cnJlbnQgKiAxMDApIC8gbWF4KSAlXHJcblxyXG5cclxuY2xlYXItbGVmdCgpXHJcbiAgICAmOjphZnRlclxyXG4gICAgICAgIGNvbnRlbnQgXCJcIlxyXG4gICAgICAgIGRpc3BsYXkgYmxvY2tcclxuICAgICAgICBjbGVhciBsZWZ0Il19 */