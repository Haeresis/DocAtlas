/**
 * The Munchkin social Networks share.
 * @component .sn-share
 * @example <div class="ui sn-share">
 *     <!-- content -->
 * </div>
 */
.sn-share {
  background-color: rgba(221,232,253,0.5);
/**
     * The white transparency design for the share component without title only for desktop.
     * @type {variation}
     * @name .as-alternative
     * @memberOf .sn-share
     * @example <div class="ui sn-share as-alternative">
     *     <!-- content -->
     * </div>
     */
/**
     * Apply a 10px 50px padding on the component.
     * @type {variation}
     * @name .with-alternative-padding
     * @memberOf .sn-share
     * @example <div class="ui sn-share as-alternative with-alternative-padding">
     *     <!-- content -->
     * </div>
     */
/**
     * The white transparency design for the share component without title only for mobile.
     * @type {variation}
     * @name .as-complementary
     * @memberOf .sn-share
     * @example <div class="ui sn-share as-complementary">
     *     <!-- content -->
     * </div>
     */
}
.sn-share--inner {
  margin-left: auto;
  margin-right: auto;
  padding-left: 15px;
  padding-right: 15px;
  position: relative;
  min-height: 40px;
  z-index: 2;
}
@media (min-width: 480px) {
  .sn-share--inner {
    max-width: 476px;
  }
}
@media (min-width: 768px) {
  .sn-share--inner {
    max-width: 760px;
  }
}
@media (min-width: 992px) {
  .sn-share--inner {
    max-width: 980px;
  }
}
@media (min-width: 1200px) {
  .sn-share--inner {
    max-width: 1180px;
  }
}
.sn-share--inner::after {
  content: "";
  display: block;
  clear: left;
}
.sn-share--navigation {
  float: left;
  width: calc(75% - 30px);
  box-sizing: border-box;
  padding: 0;
}
.sn-share--logo {
  box-sizing: border-box;
  float: left;
  width: calc(25% - 30px);
  padding: 0;
  margin-top: 12px;
  text-align: right;
}
.sn-share--logo img {
  width: auto;
  max-width: 75px;
}
@media (min-width: 768px) {
  .sn-share--logo img {
    max-width: 90px;
  }
}
.sn-share--items {
  margin: 0;
  padding: 20px 0;
  list-style-type: none;
}
.sn-share--item {
  display: inline-block;
}
.sn-share--item + .sn-share--item {
  margin-left: 40px;
}
.sn-share a {
  color: #2c1200;
  font-size: 2rem;
}
@media (min-width: 768px) {
  .sn-share a {
    font-size: 2.4rem;
  }
}
.sn-share.as-alternative {
  display: none;
  background-color: rgba(255,255,255,0.8);
}
.sn-share.as-alternative .sn-share--logo {
  display: none;
}
.sn-share.as-alternative .sn-share--navigation {
  float: left;
  width: calc(100% - 30px);
  text-align: right;
  padding: 0;
}
.sn-share.as-alternative .sn-share--items {
  padding: 15px;
}
@media (min-width: 768px) {
  .sn-share.as-alternative {
    display: block;
  }
}
.sn-share.with-alternative-padding .sn-share--items {
  padding: 10px 50px;
}
.sn-share.as-complementary {
  background-color: rgba(255,255,255,0.8);
}
.sn-share.as-complementary .sn-share--logo {
  display: none;
}
.sn-share.as-complementary .sn-share--navigation {
  box-sizing: border-box;
  text-align: center;
  padding: 0;
  float: left;
  width: calc(100% - 30px);
}
@media (min-width: 768px) {
  .sn-share.as-complementary {
    display: none;
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3dlYmFwcC9zcmMvc3R5bGVzL3VpLnNuLXNoYXJlLnN0eWwiLCIuLi93ZWJhcHAvc3JjL3N0eWxlcy92YXJpYWJsZXMuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTs7Ozs7OztBQU9BO0VBQ0ksa0JBQXdDLHNCQUF4QztBQWtEQTs7Ozs7Ozs7O0FBNEJBOzs7Ozs7Ozs7QUFhQTs7Ozs7Ozs7OztBQXpGQTtFQzJCQSxhQUFZLEtBQVo7RUFDQSxjQUFhLEtBQWI7RUR6QkksY0FBYSxLQUFiO0VBQ0EsZUFBYyxLQUFkO0VBQ0EsVUFBUyxTQUFUO0VBQ0EsWUFBVyxLQUFYO0VBQ0EsU0FBUSxFQUFSOztBQ3VCdUI7QUFBQTtJQUN2QixXQUFVLE1BQVY7OztBQUV1QjtBQUFBO0lBQ3ZCLFdBQVUsTUFBVjs7O0FBRXVCO0FBQUE7SUFDdkIsV0FBVSxNQUFWOzs7QUFFdUI7QUFBQTtJQUN2QixXQUFVLE9BQVY7OztBQTRCSjtFQUNJLFNBQVEsR0FBUjtFQUNBLFNBQVEsTUFBUjtFQUNBLE9BQU0sS0FBTjs7QUQ5REo7RUFDSSxPQUFNLEtBQU47RUNrQ0EsT0FBOEQsaUJBQTlEO0VEaENBLFlBQVcsV0FBWDtFQUNBLFNBQVEsRUFBUjs7QUFFSjtFQUNJLFlBQVcsV0FBWDtFQUNBLE9BQU0sS0FBTjtFQzJCQSxPQUE4RCxpQkFBOUQ7RUR6QkEsU0FBUSxFQUFSO0VBQ0EsWUFBVyxLQUFYO0VBQ0EsWUFBVyxNQUFYOztBQUVBO0VBQ0ksT0FBTSxLQUFOO0VBQ0EsV0FBVSxLQUFWOztBQUV3QjtBQUN4QjtJQUNJLFdBQVUsS0FBVjs7O0FBRVo7RUFDSSxRQUFPLEVBQVA7RUFDQSxTQUFRLE9BQVI7RUFDQSxpQkFBZ0IsS0FBaEI7O0FBRUo7RUFDSSxTQUFRLGFBQVI7O0FBQ0E7RUFDSSxhQUFZLEtBQVo7O0FBRVI7RUFDSSxPQUFNLFFBQU47RUFDQSxXQUFVLEtBQVY7O0FBRTRCO0FBQUE7SUFDeEIsV0FBVSxPQUFWOzs7QUFXUjtFQUNJLFNBQVEsS0FBUjtFQUNBLGtCQUF3QyxzQkFBeEM7O0FBRUE7RUFDSSxTQUFRLEtBQVI7O0FBRUo7RUFDSSxPQUFNLEtBQU47RUNyQkosT0FBOEQsa0JBQTlEO0VEdUJJLFlBQVcsTUFBWDtFQUNBLFNBQVEsRUFBUjs7QUFFSjtFQUNJLFNBQVEsS0FBUjs7QUFFd0I7QUFBQTtJQUN4QixTQUFRLE1BQVI7OztBQVlKO0VBQ0ksU0FBUSxVQUFSOztBQVdSO0VBQ0ksa0JBQXdDLHNCQUF4Qzs7QUFFQTtFQUNJLFNBQVEsS0FBUjs7QUFFSjtFQUNJLFlBQVcsV0FBWDtFQUNBLFlBQVcsT0FBWDtFQUNBLFNBQVEsRUFBUjtFQUNBLE9BQU0sS0FBTjtFQ2hFSixPQUE4RCxrQkFBOUQ7O0FEbUU0QjtBQUFBO0lBQ3hCLFNBQVEsS0FBUiIsImZpbGUiOiJ1aS5zbi1zaGFyZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwidmFyaWFibGVzXCJcclxuXHJcbi8qKlxyXG4gKiBUaGUgTXVuY2hraW4gc29jaWFsIE5ldHdvcmtzIHNoYXJlLlxyXG4gKiBAY29tcG9uZW50IC5zbi1zaGFyZVxyXG4gKiBAZXhhbXBsZSA8ZGl2IGNsYXNzPVwidWkgc24tc2hhcmVcIj5cclxuICogICAgIDwhLS0gY29udGVudCAtLT5cclxuICogPC9kaXY+XHJcbiAqL1xyXG4uc24tc2hhcmVcclxuICAgIGJhY2tncm91bmQtY29sb3IgcmdiYSgyMjEsIDIzMiwgMjUzLCAwLjUpXHJcblxyXG4gICAgJi0taW5uZXJcclxuICAgICAgICBjb250YWluZXItbWF4KClcclxuICAgICAgICBjbGVhci1sZWZ0KClcclxuICAgICAgICBwYWRkaW5nLWxlZnQgZ3V0dGVyXHJcbiAgICAgICAgcGFkZGluZy1yaWdodCBndXR0ZXJcclxuICAgICAgICBwb3NpdGlvbiByZWxhdGl2ZVxyXG4gICAgICAgIG1pbi1oZWlnaHQgNDBweFxyXG4gICAgICAgIHotaW5kZXggMlxyXG5cclxuICAgICYtLW5hdmlnYXRpb25cclxuICAgICAgICBmbG9hdCBsZWZ0XHJcbiAgICAgICAgY29sdW1uKDMsIDQsIGd1dHRlcilcclxuICAgICAgICBib3gtc2l6aW5nIGJvcmRlci1ib3hcclxuICAgICAgICBwYWRkaW5nIDBcclxuXHJcbiAgICAmLS1sb2dvXHJcbiAgICAgICAgYm94LXNpemluZyBib3JkZXItYm94XHJcbiAgICAgICAgZmxvYXQgbGVmdFxyXG4gICAgICAgIGNvbHVtbigxLCA0LCBndXR0ZXIpXHJcbiAgICAgICAgcGFkZGluZyAwXHJcbiAgICAgICAgbWFyZ2luLXRvcCAxMnB4XHJcbiAgICAgICAgdGV4dC1hbGlnbiByaWdodFxyXG5cclxuICAgICAgICBpbWdcclxuICAgICAgICAgICAgd2lkdGggYXV0b1xyXG4gICAgICAgICAgICBtYXgtd2lkdGggNzVweFxyXG5cclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogc2NyZWVuLXNtKVxyXG4gICAgICAgICAgICBpbWdcclxuICAgICAgICAgICAgICAgIG1heC13aWR0aCA5MHB4XHJcblxyXG4gICAgJi0taXRlbXNcclxuICAgICAgICBtYXJnaW4gMFxyXG4gICAgICAgIHBhZGRpbmcgMjBweCAwXHJcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlIG5vbmVcclxuXHJcbiAgICAmLS1pdGVtXHJcbiAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcclxuICAgICAgICAmICsgLnNuLXNoYXJlLS1pdGVtXHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0IDQwcHhcclxuXHJcbiAgICBhXHJcbiAgICAgICAgY29sb3IgIzJjMTIwMFxyXG4gICAgICAgIGZvbnQtc2l6ZSAycmVtXHJcblxyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBzY3JlZW4tc20pXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZSAyLjRyZW1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSB3aGl0ZSB0cmFuc3BhcmVuY3kgZGVzaWduIGZvciB0aGUgc2hhcmUgY29tcG9uZW50IHdpdGhvdXQgdGl0bGUgb25seSBmb3IgZGVza3RvcC5cclxuICAgICAqIEB0eXBlIHt2YXJpYXRpb259XHJcbiAgICAgKiBAbmFtZSAuYXMtYWx0ZXJuYXRpdmVcclxuICAgICAqIEBtZW1iZXJPZiAuc24tc2hhcmVcclxuICAgICAqIEBleGFtcGxlIDxkaXYgY2xhc3M9XCJ1aSBzbi1zaGFyZSBhcy1hbHRlcm5hdGl2ZVwiPlxyXG4gICAgICogICAgIDwhLS0gY29udGVudCAtLT5cclxuICAgICAqIDwvZGl2PlxyXG4gICAgICovXHJcbiAgICAmLmFzLWFsdGVybmF0aXZlXHJcbiAgICAgICAgZGlzcGxheSBub25lXHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvciByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOClcclxuXHJcbiAgICAgICAgLnNuLXNoYXJlLS1sb2dvXHJcbiAgICAgICAgICAgIGRpc3BsYXkgbm9uZVxyXG5cclxuICAgICAgICAuc24tc2hhcmUtLW5hdmlnYXRpb25cclxuICAgICAgICAgICAgZmxvYXQgbGVmdFxyXG4gICAgICAgICAgICBjb2x1bW4oMSwgMSwgZ3V0dGVyKTtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbiByaWdodFxyXG4gICAgICAgICAgICBwYWRkaW5nIDBcclxuXHJcbiAgICAgICAgLnNuLXNoYXJlLS1pdGVtc1xyXG4gICAgICAgICAgICBwYWRkaW5nIDE1cHhcclxuXHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IHNjcmVlbi1zbSlcclxuICAgICAgICAgICAgZGlzcGxheSBibG9ja1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQXBwbHkgYSAxMHB4IDUwcHggcGFkZGluZyBvbiB0aGUgY29tcG9uZW50LlxyXG4gICAgICogQHR5cGUge3ZhcmlhdGlvbn1cclxuICAgICAqIEBuYW1lIC53aXRoLWFsdGVybmF0aXZlLXBhZGRpbmdcclxuICAgICAqIEBtZW1iZXJPZiAuc24tc2hhcmVcclxuICAgICAqIEBleGFtcGxlIDxkaXYgY2xhc3M9XCJ1aSBzbi1zaGFyZSBhcy1hbHRlcm5hdGl2ZSB3aXRoLWFsdGVybmF0aXZlLXBhZGRpbmdcIj5cclxuICAgICAqICAgICA8IS0tIGNvbnRlbnQgLS0+XHJcbiAgICAgKiA8L2Rpdj5cclxuICAgICAqL1xyXG4gICAgJi53aXRoLWFsdGVybmF0aXZlLXBhZGRpbmdcclxuICAgICAgICAuc24tc2hhcmUtLWl0ZW1zXHJcbiAgICAgICAgICAgIHBhZGRpbmcgMTBweCA1MHB4XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgd2hpdGUgdHJhbnNwYXJlbmN5IGRlc2lnbiBmb3IgdGhlIHNoYXJlIGNvbXBvbmVudCB3aXRob3V0IHRpdGxlIG9ubHkgZm9yIG1vYmlsZS5cclxuICAgICAqIEB0eXBlIHt2YXJpYXRpb259XHJcbiAgICAgKiBAbmFtZSAuYXMtY29tcGxlbWVudGFyeVxyXG4gICAgICogQG1lbWJlck9mIC5zbi1zaGFyZVxyXG4gICAgICogQGV4YW1wbGUgPGRpdiBjbGFzcz1cInVpIHNuLXNoYXJlIGFzLWNvbXBsZW1lbnRhcnlcIj5cclxuICAgICAqICAgICA8IS0tIGNvbnRlbnQgLS0+XHJcbiAgICAgKiA8L2Rpdj5cclxuICAgICAqL1xyXG4gICAgJi5hcy1jb21wbGVtZW50YXJ5XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvciByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOClcclxuXHJcbiAgICAgICAgLnNuLXNoYXJlLS1sb2dvXHJcbiAgICAgICAgICAgIGRpc3BsYXkgbm9uZVxyXG5cclxuICAgICAgICAuc24tc2hhcmUtLW5hdmlnYXRpb25cclxuICAgICAgICAgICAgYm94LXNpemluZyBib3JkZXItYm94XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ24gY2VudGVyXHJcbiAgICAgICAgICAgIHBhZGRpbmcgMFxyXG4gICAgICAgICAgICBmbG9hdCBsZWZ0XHJcbiAgICAgICAgICAgIGNvbHVtbigxLCAxLCBndXR0ZXIpXHJcblxyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBzY3JlZW4tc20pXHJcbiAgICAgICAgICAgIGRpc3BsYXkgbm9uZSIsImd1dHRlciA9IDE1cHhcclxuc2NyZWVuLXhzID0gNDgwcHhcclxuc2NyZWVuLXNtID0gNzY4cHhcclxuc2NyZWVuLW1kID0gOTkycHhcclxuc2NyZWVuLWxnID0gMTIwMHB4XHJcbmNvbnRhaW5lci14cyA9IDQ3NnB4XHJcbmNvbnRhaW5lci1zbSA9IDc2MHB4XHJcbmNvbnRhaW5lci1tZCA9IDk4MHB4XHJcbmNvbnRhaW5lci1sZyA9IDExODBweFxyXG5cclxuZm9udC1hd2Vzb21lKClcclxuICAgIGZvbnQtZmFtaWx5OiAnRm9udEF3ZXNvbWUnO1xyXG5cclxudHJlYnVjaGV0KClcclxuICAgIGZvbnQtZmFtaWx5OiAnVHJlYnVjaGV0IE1TJywgJ0x1Y2lkYSBHcmFuZGUnLCAnTHVjaWRhIFNhbnMgVW5pY29kZScsICdMdWNpZGEgU2FucycsIFRhaG9tYSwgc2Fucy1zZXJpZjtcclxuXHJcbmhsbXQtcm91bmRlZCgpXHJcbiAgICBmb250LWZhbWlseTogJ2hsbXQtcm91bmRlZCcsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG5cclxuY2VudHVyeS1nb3RoaWMoKVxyXG4gICAgZm9udC1mYW1pbHk6ICdNdWxpJywgQXJpYWwsIHNhbnMtc2VyaWY7XHJcblxyXG5jb250YWluZXIoKVxyXG4gICAgbWFyZ2luLXJpZ2h0IGF1dG9cclxuICAgIG1hcmdpbi1sZWZ0IGF1dG9cclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aCBzY3JlZW4teHMpXHJcbiAgICAgICAgd2lkdGggY29udGFpbmVyLXhzXHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGggc2NyZWVuLXNtKVxyXG4gICAgICAgIHdpZHRoIGNvbnRhaW5lci1zbVxyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoIHNjcmVlbi1tZClcclxuICAgICAgICB3aWR0aCBjb250YWluZXItbWRcclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aCBzY3JlZW4tbGcpXHJcbiAgICAgICAgd2lkdGggY29udGFpbmVyLWxnXHJcblxyXG5jb250YWluZXItbWF4KClcclxuICAgIG1hcmdpbi1sZWZ0IGF1dG9cclxuICAgIG1hcmdpbi1yaWdodCBhdXRvXHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGggc2NyZWVuLXhzKVxyXG4gICAgICAgIG1heC13aWR0aCBjb250YWluZXIteHNcclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aCBzY3JlZW4tc20pXHJcbiAgICAgICAgbWF4LXdpZHRoIGNvbnRhaW5lci1zbVxyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoIHNjcmVlbi1tZClcclxuICAgICAgICBtYXgtd2lkdGggY29udGFpbmVyLW1kXHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGggc2NyZWVuLWxnKVxyXG4gICAgICAgIG1heC13aWR0aCBjb250YWluZXItbGdcclxuXHJcbmNvbHVtbihjdXJyZW50LCBtYXgsIGd1dHRlciA9IDApXHJcbiAgICBpZiBndXR0ZXIgIT0gMFxyXG4gICAgICAgIHdpZHRoIFwiY2FsYyglcyUgLSAlcylcIiAlICgoKGN1cnJlbnQgKiAxMDApIC8gbWF4KSAoZ3V0dGVyICogMikpXHJcbiAgICBlbHNlXHJcbiAgICAgICAgd2lkdGggKChjdXJyZW50ICogMTAwKSAvIG1heCkgJVxyXG5cclxucHJlcGVuZChjdXJyZW50LCBtYXgsIGd1dHRlciA9IDApXHJcbiAgICBpZiBndXR0ZXIgIT0gMFxyXG4gICAgICAgIG1hcmdpbi1sZWZ0IFwiY2FsYyglcyUgKyAlcylcIiAlICgoKGN1cnJlbnQgKiAxMDApIC8gbWF4KSBndXR0ZXIpXHJcbiAgICBlbHNlXHJcbiAgICAgICAgbWFyZ2luLWxlZnQgKChjdXJyZW50ICogMTAwKSAvIG1heCkgJVxyXG5cclxuYXBwZW5kKGN1cnJlbnQsIG1heClcclxuICAgIGlmIGd1dHRlciAhPSAwXHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0IFwiY2FsYyglcyUgKyAlcylcIiAlICgoKGN1cnJlbnQgKiAxMDApIC8gbWF4KSBndXR0ZXIpXHJcbiAgICBlbHNlXHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0ICgoY3VycmVudCAqIDEwMCkgLyBtYXgpICVcclxuXHJcbnB1bGwoY3VycmVudCwgbWF4KVxyXG4gICAgcmlnaHQgKChjdXJyZW50ICogMTAwKSAvIG1heCkgJVxyXG5cclxucHVzaChjdXJyZW50LCBtYXgpXHJcbiAgICBsZWZ0ICgoY3VycmVudCAqIDEwMCkgLyBtYXgpICVcclxuXHJcblxyXG5jbGVhci1sZWZ0KClcclxuICAgICY6OmFmdGVyXHJcbiAgICAgICAgY29udGVudCBcIlwiXHJcbiAgICAgICAgZGlzcGxheSBibG9ja1xyXG4gICAgICAgIGNsZWFyIGxlZnQiXX0= */