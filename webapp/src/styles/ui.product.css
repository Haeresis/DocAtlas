/**
 * The product presentation.
 * @component .product
 * @example <div class="ui product">
 *     <!-- content -->
 * </div>
 */
.product--inner {
  margin-left: auto;
  margin-right: auto;
  padding-top: 10px;
}
@media (min-width: 480px) {
  .product--inner {
    max-width: 476px;
  }
}
@media (min-width: 768px) {
  .product--inner {
    max-width: 760px;
  }
}
@media (min-width: 992px) {
  .product--inner {
    max-width: 980px;
  }
}
@media (min-width: 1200px) {
  .product--inner {
    max-width: 1180px;
  }
}
.product--inner::after {
  content: "";
  display: block;
  clear: left;
}
.product--presentation {
  float: left;
  margin-left: 15px;
  margin-right: 15px;
  text-align: left;
  width: calc(100% - 30px);
}
@media (min-width: 768px) {
  .product--presentation {
    width: calc(58.333333333333336% - 30px);
  }
}
.product h1 {
  font-family: 'Muli', Arial, sans-serif;
  font-weight: bold;
  text-transform: uppercase;
  font-size: 4.5rem;
  color: #2c1200;
}
.product h2 {
  font-family: 'hlmt-rounded', Arial, sans-serif;
  font-size: 4rem;
  color: #2c1200;
}
.product--image {
  float: left;
  width: calc(100% - 30px);
  margin-left: 15px;
  margin-right: 15px;
  margin-bottom: 15px;
  text-align: center;
/**
         * Allow images to be displayed as a carousel.
         * @type {variation}
         * @name .as-carousel
         * @memberOf .product--image
         * @example <div class="product--image as-carousel">
         *     <!-- content -->
         * </div>
         */
}
@media (min-width: 768px) {
  .product--image {
    width: calc(41.666666666666664% - 30px);
    padding-bottom: 0;
  }
}
.product--image.as-carousel .owl-page {
  box-sizing: border-box;
  margin: 6px;
  border: 2px solid #2c1200;
  height: 12px;
  width: 12px;
  display: inline-block;
  background-color: transparent;
}
.product--image.as-carousel .owl-page.active {
  background-color: #2c1200;
}
@media (min-width: 768px) {
  .product--image.as-carousel .owl-page {
    margin: 10px;
    height: 20px;
    width: 20px;
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3dlYmFwcC9zcmMvc3R5bGVzL3VpLnByb2R1Y3Quc3R5bCIsIi4uL3dlYmFwcC9zcmMvc3R5bGVzL3ZhcmlhYmxlcy5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOzs7Ozs7O0FBUUk7RUM2QkEsYUFBWSxLQUFaO0VBQ0EsY0FBYSxLQUFiO0VEM0JJLGFBQVksS0FBWjs7QUM2QnVCO0FBQUE7SUFDdkIsV0FBVSxNQUFWOzs7QUFFdUI7QUFBQTtJQUN2QixXQUFVLE1BQVY7OztBQUV1QjtBQUFBO0lBQ3ZCLFdBQVUsTUFBVjs7O0FBRXVCO0FBQUE7SUFDdkIsV0FBVSxPQUFWOzs7QUE0Qko7RUFDSSxTQUFRLEdBQVI7RUFDQSxTQUFRLE1BQVI7RUFDQSxPQUFNLEtBQU47O0FEcEVKO0VBQ0ksT0FBTSxLQUFOO0VBQ0EsYUFBYSxLQUFiO0VBQ0EsY0FBYyxLQUFkO0VBQ0EsWUFBVyxLQUFYO0VDcUNBLE9BQThELGtCQUE5RDs7QURsQzRCO0FBQUE7SUNrQzVCLE9BQThELGlDQUE5RDs7O0FEL0JKO0VDTEEsYUFBbUIsMEJBQW5CO0VET0ksYUFBWSxLQUFaO0VBQ0EsZ0JBQWUsVUFBZjtFQUNBLFdBQVUsT0FBVjtFQUNBLE9BQU0sUUFBTjs7QUFFSjtFQ2ZBLGFBQTJCLGtDQUEzQjtFRGlCSSxXQUFVLEtBQVY7RUFDQSxPQUFNLFFBQU47O0FBVUo7RUFDSSxPQUFNLEtBQU47RUNVQSxPQUE4RCxrQkFBOUQ7RURSQSxhQUFZLEtBQVo7RUFDQSxjQUFhLEtBQWI7RUFDQSxlQUFjLEtBQWQ7RUFDQSxZQUFXLE9BQVg7QUFNQTs7Ozs7Ozs7OztBQUo0QjtBQUFBO0lDRzVCLE9BQThELGlDQUE5RDtJRERJLGdCQUFlLEVBQWY7OztBQVlBO0VBQ0ksWUFBVyxXQUFYO0VBS0EsUUFBTyxJQUFQO0VBQ0EsUUFBTyxrQkFBUDtFQUNBLFFBQU8sS0FBUDtFQUNBLE9BQU0sS0FBTjtFQUNBLFNBQVEsYUFBUjtFQUNBLGtCQUFpQixZQUFqQjs7QUFSQTtFQUNJLGtCQUFrQixRQUFsQjs7QUFTd0I7QUFBQTtJQUN4QixRQUFPLEtBQVA7SUFDQSxRQUFPLEtBQVA7SUFDQSxPQUFNLEtBQU4iLCJmaWxlIjoidWkucHJvZHVjdC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwidmFyaWFibGVzXCJcclxuXHJcbi8qKlxyXG4gKiBUaGUgcHJvZHVjdCBwcmVzZW50YXRpb24uXHJcbiAqIEBjb21wb25lbnQgLnByb2R1Y3RcclxuICogQGV4YW1wbGUgPGRpdiBjbGFzcz1cInVpIHByb2R1Y3RcIj5cclxuICogICAgIDwhLS0gY29udGVudCAtLT5cclxuICogPC9kaXY+XHJcbiAqL1xyXG4ucHJvZHVjdFxyXG4gICAgJi0taW5uZXJcclxuICAgICAgICBjb250YWluZXItbWF4KClcclxuICAgICAgICBjbGVhci1sZWZ0KClcclxuICAgICAgICBwYWRkaW5nLXRvcCAxMHB4XHJcblxyXG4gICAgJi0tcHJlc2VudGF0aW9uXHJcbiAgICAgICAgZmxvYXQgbGVmdFxyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiBndXR0ZXJcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IGd1dHRlclxyXG4gICAgICAgIHRleHQtYWxpZ24gbGVmdFxyXG4gICAgICAgIGNvbHVtbigxMiwgMTIsIGd1dHRlcilcclxuXHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IHNjcmVlbi1zbSlcclxuICAgICAgICAgICAgY29sdW1uKDcsIDEyLCBndXR0ZXIpXHJcblxyXG4gICAgaDFcclxuICAgICAgICBjZW50dXJ5LWdvdGhpYygpXHJcbiAgICAgICAgZm9udC13ZWlnaHQgYm9sZFxyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtIHVwcGVyY2FzZVxyXG4gICAgICAgIGZvbnQtc2l6ZSA0LjVyZW1cclxuICAgICAgICBjb2xvciAjMmMxMjAwXHJcblxyXG4gICAgaDJcclxuICAgICAgICBobG10LXJvdW5kZWQoKVxyXG4gICAgICAgIGZvbnQtc2l6ZSA0cmVtXHJcbiAgICAgICAgY29sb3IgIzJjMTIwMFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIHBsYWNlIHJlc2VydmVkIGZvciBpbWFnZXMuXHJcbiAgICAgKiBAY29tcG9uZW50IC5wcm9kdWN0LS1pbWFnZVxyXG4gICAgICogQGV4YW1wbGUgPGRpdiBjbGFzcz1cInByb2R1Y3QtLWltYWdlXCI+XHJcbiAgICAgKiAgICAgPCEtLSBjb250ZW50IC0tPlxyXG4gICAgICogPC9kaXY+XHJcbiAgICAgKiBAcGFydG9mIC5wcm9kdWN0XHJcbiAgICAgKi9cclxuICAgICYtLWltYWdlXHJcbiAgICAgICAgZmxvYXQgbGVmdFxyXG4gICAgICAgIGNvbHVtbigxMiwgMTIsIGd1dHRlcilcclxuICAgICAgICBtYXJnaW4tbGVmdCBndXR0ZXJcclxuICAgICAgICBtYXJnaW4tcmlnaHQgZ3V0dGVyXHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbSBndXR0ZXJcclxuICAgICAgICB0ZXh0LWFsaWduIGNlbnRlclxyXG5cclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogc2NyZWVuLXNtKVxyXG4gICAgICAgICAgICBjb2x1bW4oNSwgMTIsIGd1dHRlcilcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gMFxyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBbGxvdyBpbWFnZXMgdG8gYmUgZGlzcGxheWVkIGFzIGEgY2Fyb3VzZWwuXHJcbiAgICAgICAgICogQHR5cGUge3ZhcmlhdGlvbn1cclxuICAgICAgICAgKiBAbmFtZSAuYXMtY2Fyb3VzZWxcclxuICAgICAgICAgKiBAbWVtYmVyT2YgLnByb2R1Y3QtLWltYWdlXHJcbiAgICAgICAgICogQGV4YW1wbGUgPGRpdiBjbGFzcz1cInByb2R1Y3QtLWltYWdlIGFzLWNhcm91c2VsXCI+XHJcbiAgICAgICAgICogICAgIDwhLS0gY29udGVudCAtLT5cclxuICAgICAgICAgKiA8L2Rpdj5cclxuICAgICAgICAgKi9cclxuICAgICAgICAmLmFzLWNhcm91c2VsXHJcbiAgICAgICAgICAgIC5vd2wtcGFnZVxyXG4gICAgICAgICAgICAgICAgYm94LXNpemluZyBib3JkZXItYm94XHJcblxyXG4gICAgICAgICAgICAgICAgJi5hY3RpdmVcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMxMjAwXHJcblxyXG4gICAgICAgICAgICAgICAgbWFyZ2luIDZweFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyIDJweCBzb2xpZCAjMmMxMjAwXHJcbiAgICAgICAgICAgICAgICBoZWlnaHQgMTJweFxyXG4gICAgICAgICAgICAgICAgd2lkdGggMTJweFxyXG4gICAgICAgICAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3IgdHJhbnNwYXJlbnRcclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogc2NyZWVuLXNtKVxyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbiAxMHB4XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0IDIwcHhcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aCAyMHB4XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEaXNwbGF5IHRoZSB0ZXh0IGFyZWEgd2l0aCBsZXNzIHNwYWNlIHRvIHRoZSByaWdodC5cclxuICAgICAqIEB0eXBlIHt2YXJpYXRpb259XHJcbiAgICAgKiBAbmFtZSAuYXMtY2Fyb3VzZWxcclxuICAgICAqIEBtZW1iZXJPZiAucHJvZHVjdC0taW1hZ2VcclxuICAgICAqIEBleGFtcGxlIDxkaXYgY2xhc3M9XCJwcm9kdWN0IGFzLXNtYWxsXCI+XHJcbiAgICAgKiAgICAgPCEtLSBjb250ZW50IC0tPlxyXG4gICAgICogPC9kaXY+XHJcbiAgICAgKi9cclxuICAgIC8qJi5hcy1zbWFsbFxyXG4gICAgICAgICYgXlswXS0tcHJlc2VudGF0aW9uXHJcbiAgICAgICAgICAgIGNvbHVtbigxLCAxLCBndXR0ZXIpXHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0IGd1dHRlclxyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQgZ3V0dGVyXHJcbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBzY3JlZW4tbGcpXHJcbiAgICAgICAgICAgICAgICBjb2x1bW4oMSwgMiwgZ3V0dGVyKSovIiwiZ3V0dGVyID0gMTVweFxyXG5zY3JlZW4teHMgPSA0ODBweFxyXG5zY3JlZW4tc20gPSA3NjhweFxyXG5zY3JlZW4tbWQgPSA5OTJweFxyXG5zY3JlZW4tbGcgPSAxMjAwcHhcclxuY29udGFpbmVyLXhzID0gNDc2cHhcclxuY29udGFpbmVyLXNtID0gNzYwcHhcclxuY29udGFpbmVyLW1kID0gOTgwcHhcclxuY29udGFpbmVyLWxnID0gMTE4MHB4XHJcblxyXG5mb250LWF3ZXNvbWUoKVxyXG4gICAgZm9udC1mYW1pbHk6ICdGb250QXdlc29tZSc7XHJcblxyXG50cmVidWNoZXQoKVxyXG4gICAgZm9udC1mYW1pbHk6ICdUcmVidWNoZXQgTVMnLCAnTHVjaWRhIEdyYW5kZScsICdMdWNpZGEgU2FucyBVbmljb2RlJywgJ0x1Y2lkYSBTYW5zJywgVGFob21hLCBzYW5zLXNlcmlmO1xyXG5cclxuaGxtdC1yb3VuZGVkKClcclxuICAgIGZvbnQtZmFtaWx5OiAnaGxtdC1yb3VuZGVkJywgQXJpYWwsIHNhbnMtc2VyaWY7XHJcblxyXG5jZW50dXJ5LWdvdGhpYygpXHJcbiAgICBmb250LWZhbWlseTogJ011bGknLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuXHJcbmNvbnRhaW5lcigpXHJcbiAgICBtYXJnaW4tcmlnaHQgYXV0b1xyXG4gICAgbWFyZ2luLWxlZnQgYXV0b1xyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoIHNjcmVlbi14cylcclxuICAgICAgICB3aWR0aCBjb250YWluZXIteHNcclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aCBzY3JlZW4tc20pXHJcbiAgICAgICAgd2lkdGggY29udGFpbmVyLXNtXHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGggc2NyZWVuLW1kKVxyXG4gICAgICAgIHdpZHRoIGNvbnRhaW5lci1tZFxyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoIHNjcmVlbi1sZylcclxuICAgICAgICB3aWR0aCBjb250YWluZXItbGdcclxuXHJcbmNvbnRhaW5lci1tYXgoKVxyXG4gICAgbWFyZ2luLWxlZnQgYXV0b1xyXG4gICAgbWFyZ2luLXJpZ2h0IGF1dG9cclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aCBzY3JlZW4teHMpXHJcbiAgICAgICAgbWF4LXdpZHRoIGNvbnRhaW5lci14c1xyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoIHNjcmVlbi1zbSlcclxuICAgICAgICBtYXgtd2lkdGggY29udGFpbmVyLXNtXHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGggc2NyZWVuLW1kKVxyXG4gICAgICAgIG1heC13aWR0aCBjb250YWluZXItbWRcclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aCBzY3JlZW4tbGcpXHJcbiAgICAgICAgbWF4LXdpZHRoIGNvbnRhaW5lci1sZ1xyXG5cclxuY29sdW1uKGN1cnJlbnQsIG1heCwgZ3V0dGVyID0gMClcclxuICAgIGlmIGd1dHRlciAhPSAwXHJcbiAgICAgICAgd2lkdGggXCJjYWxjKCVzJSAtICVzKVwiICUgKCgoY3VycmVudCAqIDEwMCkgLyBtYXgpIChndXR0ZXIgKiAyKSlcclxuICAgIGVsc2VcclxuICAgICAgICB3aWR0aCAoKGN1cnJlbnQgKiAxMDApIC8gbWF4KSAlXHJcblxyXG5wcmVwZW5kKGN1cnJlbnQsIG1heCwgZ3V0dGVyID0gMClcclxuICAgIGlmIGd1dHRlciAhPSAwXHJcbiAgICAgICAgbWFyZ2luLWxlZnQgXCJjYWxjKCVzJSArICVzKVwiICUgKCgoY3VycmVudCAqIDEwMCkgLyBtYXgpIGd1dHRlcilcclxuICAgIGVsc2VcclxuICAgICAgICBtYXJnaW4tbGVmdCAoKGN1cnJlbnQgKiAxMDApIC8gbWF4KSAlXHJcblxyXG5hcHBlbmQoY3VycmVudCwgbWF4KVxyXG4gICAgaWYgZ3V0dGVyICE9IDBcclxuICAgICAgICBtYXJnaW4tcmlnaHQgXCJjYWxjKCVzJSArICVzKVwiICUgKCgoY3VycmVudCAqIDEwMCkgLyBtYXgpIGd1dHRlcilcclxuICAgIGVsc2VcclxuICAgICAgICBtYXJnaW4tcmlnaHQgKChjdXJyZW50ICogMTAwKSAvIG1heCkgJVxyXG5cclxucHVsbChjdXJyZW50LCBtYXgpXHJcbiAgICByaWdodCAoKGN1cnJlbnQgKiAxMDApIC8gbWF4KSAlXHJcblxyXG5wdXNoKGN1cnJlbnQsIG1heClcclxuICAgIGxlZnQgKChjdXJyZW50ICogMTAwKSAvIG1heCkgJVxyXG5cclxuXHJcbmNsZWFyLWxlZnQoKVxyXG4gICAgJjo6YWZ0ZXJcclxuICAgICAgICBjb250ZW50IFwiXCJcclxuICAgICAgICBkaXNwbGF5IGJsb2NrXHJcbiAgICAgICAgY2xlYXIgbGVmdCJdfQ== */